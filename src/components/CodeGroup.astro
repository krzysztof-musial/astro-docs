---
const props = Astro.props;
const html = await Astro.slots.render("default");
const blocks = html
  .replaceAll("</div>", "</div>|")
  .split("|")
  .filter((block) => block !== "");
---

<div
  class="overflow-hidden rounded-lg border border-neutral-200 bg-neutral-100 dark:border-neutral-800 dark:bg-neutral-900"
>
  <div
    class="flex items-center justify-between gap-4 border-b border-neutral-200 bg-neutral-200 px-4 dark:border-neutral-800 dark:bg-zinc-800"
  >
    <p class="my-0 text-[13px] font-medium dark:text-white">{props.title}</p>
    <ul class="my-0 flex list-none items-center gap-4">
      {
        blocks.map((block, index) => (
          <li
            class={
              index === 0
                ? "m-0 border-b border-emerald-400 px-0 py-2 text-emerald-400 dark:border-emerald-400 dark:text-emerald-400"
                : "m-0 px-0 py-2 dark:text-white"
            }
          >
            <button class="text-[13px] font-semibold">JavaScript</button>
          </li>
        ))
      }
    </ul>
  </div>
  {
    blocks.map((block, index) => (
      <div class={index !== 0 ? "hidden" : ""} set:html={block} />
    ))
  }
</div>

<style lang="scss" is:global>
  pre[data-theme="light"] {
    @apply my-0 dark:hidden;
    background: none !important;
  }
  pre[data-theme="dark"] {
    @apply my-0 hidden dark:block;
    background: none !important;
  }
  pre {
    border-radius: 0 !important;
    padding: 1rem 0 !important;
  }
  code {
    display: grid !important;
  }
  .line {
    @apply px-4;
  }
  .highlighted {
    @apply border-l-4 border-sky-400 bg-sky-300/[0.15];
  }
  .word {
    @apply rounded-md bg-sky-300/[0.3];
  }
</style>
